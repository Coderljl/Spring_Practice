<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- spring依赖注入
        依赖注入：
            Dependency Injection
        IOC的作用：
            降低程序间的耦合（依赖关系）
        依赖关系的管理：
            交给spring维护
        在当前类需要用到其他类的对象时，有Spring为我们提供，我们只要在配置文件说明。
        依赖关系的维护：
            成为依赖注入
        依赖注入：
            能注入的数据有三类
                基本类型和String
                其他bean类型
                复杂类型和集合类型
            注入的方式有三种：
                第一种：使用构造函数提供
                第二种：使用set方法提供
                第三种：使用注解提供
    -->
<!--    构造函数注入
            使用标签：constructor-arg
            标签出现的位置：bean标签内部
            标签中的属性
                type:用于指定要注入的数据类型
                index：用于指定要注入的数据给构造函数中指定索引位置的参数赋值，索引位置从零开始。
                name：用于指定给构造函数指定索引的位置参数赋值。索引从0开始
                =========================三个用于给指定构造函数的参数赋值=====================================
                value：用于提供基本类型和String类型的数据。
                ref：用于指定其他bean类型数据
             优势：
                在获取bean对象时，注入数据是必须的操作，否则无法创建对象。
             弊端：改变bean对象实例方式。如果用不到这些数据页必须提供。
-->
    <bean id="accountService" class="com.allen.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="test"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
        <constructor-arg name="birthday" ref="now"></constructor-arg>
    </bean>
<!--    配置一个日期对象-->
    <bean id="now" class="java.util.Date"></bean>
<!--    set方法注入                                 更常用
            涉及标签：property
            出现位置：bean标签内部
            标签属性：
                name：用于指定注入时所调用的方法名城
                value：用于提供基本类型和String类型的数据。
                ref：用于指定其他bean类型数据
            优势：
                创建对象没有明确限制，可以直接使用默认构造函数
            弊端：如果某个成员必须有值，则获取对象有可能是set方法没有执行
-->
    <bean id="accountService2" class="com.allen.service.impl.AccountServiceImpl2">
        <property name="birthday" ref="now" ></property>
        <property name="age" value="11" ></property>
        <property name="name" value="Allen" ></property>
    </bean>
<!--    复杂类型注入/集合类型注入-->
    <bean id="accountService3" class="com.allen.service.impl.AccountServiceImpl3">
        <property name="strs">
            <array>
                <value>AAAA</value>
                <value>BBBB</value>
                <value>CCCC</value>
                <value>DDDD</value>
            </array>
        </property>
        <property name="myList">
            <list>
                <value>AAAA</value>
                <value>BBBB</value>
                <value>CCCC</value>
                <value>DDDD</value>
            </list>
        </property>

        <property name="mySet">
            <set>
                <value>AAAA</value>
                <value>BBBB</value>
                <value>CCCC</value>
                <value>DDDD</value>
            </set>
        </property>

        <property name="myMap">
            <map>
                <entry key="name" value="Allen"></entry>
            </map>
        </property>

        <property name="MYProps">
            <props>
                <prop key="jj">jj</prop>
            </props>
        </property>
    </bean>






















</beans>